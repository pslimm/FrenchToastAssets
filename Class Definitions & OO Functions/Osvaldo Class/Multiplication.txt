h_class Player
h_{
h_	private:
h_		int jumpHeight;
h_		int jumpDistance;
h_	public:
h_		Player(int jh=1, int jd=1){jumpHeight=jh; jumpDistance=jd;}
h_		Player operator *(Player multiplier);
h_}
i_Player Player::operator *(Player multiplier) {
p_// Declare a new Playera
p_// Multiplication to modify the new playerb
p_b
p_// Return the new modified playerc
i_}
c_Player newStats;a0
c_newStats.jumpHeight = jumpHeight * multiplier.jumpHeight;b1
c_newStats.jumpDistance = jumpDistance * multiplier.jumpDistance;b2
c_jumpDistance = newStats.jumpDistance * multiplier.jumpDistance;d1
c_jumpHeight = newStats.jumpHeight * multiplier.jumpHeight;d2
c_return jumpHeight;d3
c_return jumpDistance;d3
c_return newStats;c3
s_Player osvaldo;
s_Player multiplier(jumpHeight, jumpDistance);
s_Player newOsvaldo;
s_newOsvaldo = osvaldo * multiplier;